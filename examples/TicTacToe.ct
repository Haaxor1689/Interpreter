func IsValidRow(var column: number): bool {
	return &&(<=(column, 2), >=(column, 0));
}

func IsValidColumn(var row: string): bool {
	return ||(==(row, "A"), ||(==(row, "B"), ==(row, "C")));
}

object Column {
	var A = " ";
	var B = " ";
	var C = " ";
}

func PrintGrid(var grid: Column[]): void {
	WriteLine(" |A|B|C|");
	WriteLine("--------");
	for var i in 0...2 {
		Write(i);
		for var j in [ "A", "B", "C", ] {
			Write(+("|", grid[i][j]));
		}
		WriteLine("|");
		WriteLine("--------");
	}
}

func Play(): string {
	var shouldEnd = false;

	var grid: Column[] = [ new Grid{}, new Grid{}, new Grid{}, ];

	var currentPlayer = "X";

	while !shouldEnd {
		PrintGrid(grid);
		WriteLine(+("Player ", +(currentPlayer, "'s turn")));

		WriteLine("Write row number:");
		var row = ReadNumber();
		if !IsValidRow(row) {
			WriteLine(+("Invalid row ", row));
		}

		WriteLine("Write column letter:");
		var column = ReadText();
		if !IsValidColumn(column) {
			WriteLine(+("Invalid column ", column));
		}

		if == grid[row][column] " " {
			grid[row][column] = currentPlayer;
			if == currentPlayer "X" {
				currentPlayer = "O";
			} else {
				currentPlayer = "X";
			}
		}
	}

	return +("Player ", +(currentPlayer, " won"));
}
